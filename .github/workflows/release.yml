name: Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-rc*'

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          check-latest: true

      - name: Verify Integrity
        run: |
          go mod verify

      - name: Lint Project
        uses: golangci/golangci-lint-action@v8

      - name: Test Project
        run: |
          go test -v ./...

      - name: Get Tag
        id: getTag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build and Package for Multiple Platforms
        run: |
          TAG=${{ steps.getTag.outputs.TAG }}
          PROJECT_NAME=$(basename "${{ github.repository }}")

          PLATFORMS=(
            "linux/amd64"
            "linux/arm64"
            "windows/amd64"
            "darwin/amd64"
            "darwin/arm64"
          )

          mkdir -p releases

          for platform in "${PLATFORMS[@]}"; do
            GOOS=$(echo $platform | cut -d'/' -f1)
            GOARCH=$(echo $platform | cut -d'/' -f2)

            BINARY_NAME="${PROJECT_NAME}-${GOOS}-${GOARCH}"

            if [ "$GOOS" = "windows" ]; then
              BINARY_NAME="${BINARY_NAME}.exe"
            fi

            echo "Building for ${GOOS}/${GOARCH}..."
            env GOOS=$GOOS GOARCH=$GOARCH go build -ldflags "-s -w -X main.version=$TAG" -o "./releases/${BINARY_NAME}" .
          done

          cd releases
          sha256sum * > checksums.txt
          cd ..

      - name: Generate Release Notes
        id: generateReleaseNotes
        run: |
          git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:'* %s (%an)' --no-merges > release_notes.md
          echo "changelog=$(cat release_notes.md)" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.getTag.outputs.TAG }}
          name: Release ${{ steps.getTag.outputs.TAG }}
          body: |
            ## Release Notes for ${{ steps.getTag.outputs.TAG }}

            This release includes:

            ${{ steps.generateReleaseNotes.outputs.changelog || 'No specific changelog generated. See commit history for details.' }}

            ---
            *Built with ❤️ by @funilrys through GitHub Actions*
          files: |
            ./releases/*
            LICENSE
            README.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}